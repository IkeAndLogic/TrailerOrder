// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrailerOrder.Data;

namespace TrailerOrder.Migrations
{
    [DbContext(typeof(TrailerOrderDbContext))]
    partial class TrailerOrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrailerOrder.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("CustomerName");

                    b.Property<string>("State");

                    b.Property<string>("StreetName");

                    b.Property<string>("StreetNumber");

                    b.Property<string>("ZipCode");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TrailerOrder.Models.DriverTractorAssignmentHistory", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("TractorId");

                    b.Property<DateTime>("DateTimeAssigned");

                    b.Property<DateTime?>("DateTimeUnassigned");

                    b.Property<string>("TractorNumber");

                    b.HasKey("EmployeeId", "TractorId");

                    b.HasIndex("TractorId");

                    b.ToTable("DriverTractorsAssignmentHistory");
                });

            modelBuilder.Entity("TrailerOrder.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<DateTime>("Dob");

                    b.Property<bool>("DotCompliant");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("LicExpire");

                    b.Property<DateTime>("LicIssue");

                    b.Property<string>("LicNumber");

                    b.Property<string>("MedCardNumber");

                    b.Property<DateTime>("MedExpire");

                    b.Property<DateTime>("MedIssue");

                    b.Property<string>("MiddleName");

                    b.Property<int>("OrderID");

                    b.Property<string>("Password");

                    b.Property<string>("PasswordConf");

                    b.Property<string>("SSN");

                    b.Property<string>("SsnConfirm");

                    b.Property<string>("StreetName");

                    b.Property<string>("StreetNumber");

                    b.Property<int>("Title");

                    b.Property<int?>("TractorID");

                    b.Property<string>("UserName");

                    b.Property<string>("WorkStatus");

                    b.Property<string>("ZipCode");

                    b.HasKey("EmployeeID");

                    b.HasIndex("TractorID")
                        .IsUnique()
                        .HasFilter("[TractorID] IS NOT NULL");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TrailerOrder.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Completed");

                    b.Property<int>("CustomerOrdersID");

                    b.Property<DateTime>("DateAssigned");

                    b.Property<DateTime>("DateDelivered");

                    b.Property<DateTime>("DueDate");

                    b.Property<int?>("EmployeeID");

                    b.Property<string>("OrderNumber");

                    b.Property<string>("OrderStatus");

                    b.Property<int>("TrailerForLoadID");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerOrdersID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("TrailerForLoadID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TrailerOrder.Models.Tractor", b =>
                {
                    b.Property<int>("TractorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAssigned");

                    b.Property<DateTime>("DateReturned");

                    b.Property<DateTime>("DotInp");

                    b.Property<string>("PlateNumber");

                    b.Property<DateTime>("RegDate");

                    b.Property<string>("Status");

                    b.Property<string>("TractorMake");

                    b.Property<string>("TractorModel");

                    b.Property<string>("TruckNumber");

                    b.Property<string>("VinNumber");

                    b.Property<string>("Year");

                    b.HasKey("TractorID");

                    b.ToTable("Tractors");
                });

            modelBuilder.Entity("TrailerOrder.Models.Trailer", b =>
                {
                    b.Property<int>("TrailerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InspDate");

                    b.Property<DateTime>("RegDate");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("TrailerMake");

                    b.Property<string>("TrailerModel");

                    b.Property<string>("TrailerNumber");

                    b.Property<string>("TrailerStatus");

                    b.Property<string>("Year");

                    b.HasKey("TrailerID");

                    b.ToTable("Trailers");
                });

            modelBuilder.Entity("TrailerOrder.Models.DriverTractorAssignmentHistory", b =>
                {
                    b.HasOne("TrailerOrder.Models.Tractor", "Tractor")
                        .WithMany("DriverTractorAssignmentHistories")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TrailerOrder.Models.Employee", "Driver")
                        .WithMany("DriverTractorAssignmentHistories")
                        .HasForeignKey("TractorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TrailerOrder.Models.Employee", b =>
                {
                    b.HasOne("TrailerOrder.Models.Tractor", "Tractor")
                        .WithOne("Employee")
                        .HasForeignKey("TrailerOrder.Models.Employee", "TractorID");
                });

            modelBuilder.Entity("TrailerOrder.Models.Order", b =>
                {
                    b.HasOne("TrailerOrder.Models.Customer", "CustomerOrders")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("CustomerOrdersID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TrailerOrder.Models.Employee", "Driver")
                        .WithMany("Order")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("TrailerOrder.Models.Trailer", "TrailerForLoad")
                        .WithMany("OrderforTrailer")
                        .HasForeignKey("TrailerForLoadID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
